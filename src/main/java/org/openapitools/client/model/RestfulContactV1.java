/*
 * j-lawyer-io
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RestfulContactV1
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-14T23:02:59.563495701+01:00[Europe/Berlin]")
public class RestfulContactV1 {
  public static final String SERIALIZED_NAME_BANK_ACCOUNT = "bankAccount";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT)
  private java.lang.String bankAccount;

  public static final String SERIALIZED_NAME_BANK_CODE = "bankCode";
  @SerializedName(SERIALIZED_NAME_BANK_CODE)
  private java.lang.String bankCode;

  public static final String SERIALIZED_NAME_BANK_NAME = "bankName";
  @SerializedName(SERIALIZED_NAME_BANK_NAME)
  private java.lang.String bankName;

  public static final String SERIALIZED_NAME_BEA_SAFE_ID = "beaSafeId";
  @SerializedName(SERIALIZED_NAME_BEA_SAFE_ID)
  private java.lang.String beaSafeId;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birthDate";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private java.lang.String birthDate;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private java.lang.String city;

  public static final String SERIALIZED_NAME_COMPANY = "company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private java.lang.String company;

  public static final String SERIALIZED_NAME_COMPLIMENTARY_CLOSE = "complimentaryClose";
  @SerializedName(SERIALIZED_NAME_COMPLIMENTARY_CLOSE)
  private java.lang.String complimentaryClose;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private java.lang.String country;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private Object creationDate;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private java.lang.String creator;

  public static final String SERIALIZED_NAME_CUSTOM1 = "custom1";
  @SerializedName(SERIALIZED_NAME_CUSTOM1)
  private java.lang.String custom1;

  public static final String SERIALIZED_NAME_CUSTOM2 = "custom2";
  @SerializedName(SERIALIZED_NAME_CUSTOM2)
  private java.lang.String custom2;

  public static final String SERIALIZED_NAME_CUSTOM3 = "custom3";
  @SerializedName(SERIALIZED_NAME_CUSTOM3)
  private java.lang.String custom3;

  public static final String SERIALIZED_NAME_DEPARTMENT = "department";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT)
  private java.lang.String department;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private java.lang.String email;

  public static final String SERIALIZED_NAME_ENCRYPTION_PWD = "encryptionPwd";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_PWD)
  private java.lang.String encryptionPwd;

  public static final String SERIALIZED_NAME_FAX = "fax";
  @SerializedName(SERIALIZED_NAME_FAX)
  private java.lang.String fax;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private java.lang.String firstName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private java.lang.String id;

  public static final String SERIALIZED_NAME_INSURANCE_NAME = "insuranceName";
  @SerializedName(SERIALIZED_NAME_INSURANCE_NAME)
  private java.lang.String insuranceName;

  public static final String SERIALIZED_NAME_INSURANCE_NUMBER = "insuranceNumber";
  @SerializedName(SERIALIZED_NAME_INSURANCE_NUMBER)
  private java.lang.String insuranceNumber;

  public static final String SERIALIZED_NAME_LAST_MODIFIER = "lastModifier";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIER)
  private java.lang.String lastModifier;

  public static final String SERIALIZED_NAME_LEGAL_PROTECTION = "legalProtection";
  @SerializedName(SERIALIZED_NAME_LEGAL_PROTECTION)
  private Integer legalProtection;

  public static final String SERIALIZED_NAME_MOBILE = "mobile";
  @SerializedName(SERIALIZED_NAME_MOBILE)
  private java.lang.String mobile;

  public static final String SERIALIZED_NAME_MODIFICATION_DATE = "modificationDate";
  @SerializedName(SERIALIZED_NAME_MODIFICATION_DATE)
  private Object modificationDate;

  public static final String SERIALIZED_NAME_MOTOR_INSURANCE_NAME = "motorInsuranceName";
  @SerializedName(SERIALIZED_NAME_MOTOR_INSURANCE_NAME)
  private java.lang.String motorInsuranceName;

  public static final String SERIALIZED_NAME_MOTOR_INSURANCE_NUMBER = "motorInsuranceNumber";
  @SerializedName(SERIALIZED_NAME_MOTOR_INSURANCE_NUMBER)
  private java.lang.String motorInsuranceNumber;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private java.lang.String name;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private java.lang.String phone;

  public static final String SERIALIZED_NAME_SALUTATION = "salutation";
  @SerializedName(SERIALIZED_NAME_SALUTATION)
  private java.lang.String salutation;

  public static final String SERIALIZED_NAME_STREET = "street";
  @SerializedName(SERIALIZED_NAME_STREET)
  private java.lang.String street;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private java.lang.String title;

  public static final String SERIALIZED_NAME_TRAFFIC_INSURANCE_NAME = "trafficInsuranceName";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_INSURANCE_NAME)
  private java.lang.String trafficInsuranceName;

  public static final String SERIALIZED_NAME_TRAFFIC_INSURANCE_NUMBER = "trafficInsuranceNumber";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_INSURANCE_NUMBER)
  private java.lang.String trafficInsuranceNumber;

  public static final String SERIALIZED_NAME_TRAFFIC_LEGAL_PROTECTION = "trafficLegalProtection";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_LEGAL_PROTECTION)
  private Integer trafficLegalProtection;

  public static final String SERIALIZED_NAME_WEBSITE = "website";
  @SerializedName(SERIALIZED_NAME_WEBSITE)
  private java.lang.String website;

  public static final String SERIALIZED_NAME_ZIP_CODE = "zipCode";
  @SerializedName(SERIALIZED_NAME_ZIP_CODE)
  private java.lang.String zipCode;

  public RestfulContactV1() {
  }

  public RestfulContactV1 bankAccount(java.lang.String bankAccount) {
    
    this.bankAccount = bankAccount;
    return this;
  }

   /**
   * Get bankAccount
   * @return bankAccount
  **/
  @javax.annotation.Nullable
  public java.lang.String getBankAccount() {
    return bankAccount;
  }


  public void setBankAccount(java.lang.String bankAccount) {
    this.bankAccount = bankAccount;
  }


  public RestfulContactV1 bankCode(java.lang.String bankCode) {
    
    this.bankCode = bankCode;
    return this;
  }

   /**
   * Get bankCode
   * @return bankCode
  **/
  @javax.annotation.Nullable
  public java.lang.String getBankCode() {
    return bankCode;
  }


  public void setBankCode(java.lang.String bankCode) {
    this.bankCode = bankCode;
  }


  public RestfulContactV1 bankName(java.lang.String bankName) {
    
    this.bankName = bankName;
    return this;
  }

   /**
   * Get bankName
   * @return bankName
  **/
  @javax.annotation.Nullable
  public java.lang.String getBankName() {
    return bankName;
  }


  public void setBankName(java.lang.String bankName) {
    this.bankName = bankName;
  }


  public RestfulContactV1 beaSafeId(java.lang.String beaSafeId) {
    
    this.beaSafeId = beaSafeId;
    return this;
  }

   /**
   * Get beaSafeId
   * @return beaSafeId
  **/
  @javax.annotation.Nullable
  public java.lang.String getBeaSafeId() {
    return beaSafeId;
  }


  public void setBeaSafeId(java.lang.String beaSafeId) {
    this.beaSafeId = beaSafeId;
  }


  public RestfulContactV1 birthDate(java.lang.String birthDate) {
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Get birthDate
   * @return birthDate
  **/
  @javax.annotation.Nullable
  public java.lang.String getBirthDate() {
    return birthDate;
  }


  public void setBirthDate(java.lang.String birthDate) {
    this.birthDate = birthDate;
  }


  public RestfulContactV1 city(java.lang.String city) {
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  public java.lang.String getCity() {
    return city;
  }


  public void setCity(java.lang.String city) {
    this.city = city;
  }


  public RestfulContactV1 company(java.lang.String company) {
    
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @javax.annotation.Nullable
  public java.lang.String getCompany() {
    return company;
  }


  public void setCompany(java.lang.String company) {
    this.company = company;
  }


  public RestfulContactV1 complimentaryClose(java.lang.String complimentaryClose) {
    
    this.complimentaryClose = complimentaryClose;
    return this;
  }

   /**
   * Get complimentaryClose
   * @return complimentaryClose
  **/
  @javax.annotation.Nullable
  public java.lang.String getComplimentaryClose() {
    return complimentaryClose;
  }


  public void setComplimentaryClose(java.lang.String complimentaryClose) {
    this.complimentaryClose = complimentaryClose;
  }


  public RestfulContactV1 country(java.lang.String country) {
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  public java.lang.String getCountry() {
    return country;
  }


  public void setCountry(java.lang.String country) {
    this.country = country;
  }


  public RestfulContactV1 creationDate(Object creationDate) {
    
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @javax.annotation.Nullable
  public Object getCreationDate() {
    return creationDate;
  }


  public void setCreationDate(Object creationDate) {
    this.creationDate = creationDate;
  }


  public RestfulContactV1 creator(java.lang.String creator) {
    
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @javax.annotation.Nullable
  public java.lang.String getCreator() {
    return creator;
  }


  public void setCreator(java.lang.String creator) {
    this.creator = creator;
  }


  public RestfulContactV1 custom1(java.lang.String custom1) {
    
    this.custom1 = custom1;
    return this;
  }

   /**
   * Get custom1
   * @return custom1
  **/
  @javax.annotation.Nullable
  public java.lang.String getCustom1() {
    return custom1;
  }


  public void setCustom1(java.lang.String custom1) {
    this.custom1 = custom1;
  }


  public RestfulContactV1 custom2(java.lang.String custom2) {
    
    this.custom2 = custom2;
    return this;
  }

   /**
   * Get custom2
   * @return custom2
  **/
  @javax.annotation.Nullable
  public java.lang.String getCustom2() {
    return custom2;
  }


  public void setCustom2(java.lang.String custom2) {
    this.custom2 = custom2;
  }


  public RestfulContactV1 custom3(java.lang.String custom3) {
    
    this.custom3 = custom3;
    return this;
  }

   /**
   * Get custom3
   * @return custom3
  **/
  @javax.annotation.Nullable
  public java.lang.String getCustom3() {
    return custom3;
  }


  public void setCustom3(java.lang.String custom3) {
    this.custom3 = custom3;
  }


  public RestfulContactV1 department(java.lang.String department) {
    
    this.department = department;
    return this;
  }

   /**
   * Get department
   * @return department
  **/
  @javax.annotation.Nullable
  public java.lang.String getDepartment() {
    return department;
  }


  public void setDepartment(java.lang.String department) {
    this.department = department;
  }


  public RestfulContactV1 email(java.lang.String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  public java.lang.String getEmail() {
    return email;
  }


  public void setEmail(java.lang.String email) {
    this.email = email;
  }


  public RestfulContactV1 encryptionPwd(java.lang.String encryptionPwd) {
    
    this.encryptionPwd = encryptionPwd;
    return this;
  }

   /**
   * Get encryptionPwd
   * @return encryptionPwd
  **/
  @javax.annotation.Nullable
  public java.lang.String getEncryptionPwd() {
    return encryptionPwd;
  }


  public void setEncryptionPwd(java.lang.String encryptionPwd) {
    this.encryptionPwd = encryptionPwd;
  }


  public RestfulContactV1 fax(java.lang.String fax) {
    
    this.fax = fax;
    return this;
  }

   /**
   * Get fax
   * @return fax
  **/
  @javax.annotation.Nullable
  public java.lang.String getFax() {
    return fax;
  }


  public void setFax(java.lang.String fax) {
    this.fax = fax;
  }


  public RestfulContactV1 firstName(java.lang.String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  public java.lang.String getFirstName() {
    return firstName;
  }


  public void setFirstName(java.lang.String firstName) {
    this.firstName = firstName;
  }


  public RestfulContactV1 id(java.lang.String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public java.lang.String getId() {
    return id;
  }


  public void setId(java.lang.String id) {
    this.id = id;
  }


  public RestfulContactV1 insuranceName(java.lang.String insuranceName) {
    
    this.insuranceName = insuranceName;
    return this;
  }

   /**
   * Get insuranceName
   * @return insuranceName
  **/
  @javax.annotation.Nullable
  public java.lang.String getInsuranceName() {
    return insuranceName;
  }


  public void setInsuranceName(java.lang.String insuranceName) {
    this.insuranceName = insuranceName;
  }


  public RestfulContactV1 insuranceNumber(java.lang.String insuranceNumber) {
    
    this.insuranceNumber = insuranceNumber;
    return this;
  }

   /**
   * Get insuranceNumber
   * @return insuranceNumber
  **/
  @javax.annotation.Nullable
  public java.lang.String getInsuranceNumber() {
    return insuranceNumber;
  }


  public void setInsuranceNumber(java.lang.String insuranceNumber) {
    this.insuranceNumber = insuranceNumber;
  }


  public RestfulContactV1 lastModifier(java.lang.String lastModifier) {
    
    this.lastModifier = lastModifier;
    return this;
  }

   /**
   * Get lastModifier
   * @return lastModifier
  **/
  @javax.annotation.Nullable
  public java.lang.String getLastModifier() {
    return lastModifier;
  }


  public void setLastModifier(java.lang.String lastModifier) {
    this.lastModifier = lastModifier;
  }


  public RestfulContactV1 legalProtection(Integer legalProtection) {
    
    this.legalProtection = legalProtection;
    return this;
  }

   /**
   * Get legalProtection
   * @return legalProtection
  **/
  @javax.annotation.Nullable
  public Integer getLegalProtection() {
    return legalProtection;
  }


  public void setLegalProtection(Integer legalProtection) {
    this.legalProtection = legalProtection;
  }


  public RestfulContactV1 mobile(java.lang.String mobile) {
    
    this.mobile = mobile;
    return this;
  }

   /**
   * Get mobile
   * @return mobile
  **/
  @javax.annotation.Nullable
  public java.lang.String getMobile() {
    return mobile;
  }


  public void setMobile(java.lang.String mobile) {
    this.mobile = mobile;
  }


  public RestfulContactV1 modificationDate(Object modificationDate) {
    
    this.modificationDate = modificationDate;
    return this;
  }

   /**
   * Get modificationDate
   * @return modificationDate
  **/
  @javax.annotation.Nullable
  public Object getModificationDate() {
    return modificationDate;
  }


  public void setModificationDate(Object modificationDate) {
    this.modificationDate = modificationDate;
  }


  public RestfulContactV1 motorInsuranceName(java.lang.String motorInsuranceName) {
    
    this.motorInsuranceName = motorInsuranceName;
    return this;
  }

   /**
   * Get motorInsuranceName
   * @return motorInsuranceName
  **/
  @javax.annotation.Nullable
  public java.lang.String getMotorInsuranceName() {
    return motorInsuranceName;
  }


  public void setMotorInsuranceName(java.lang.String motorInsuranceName) {
    this.motorInsuranceName = motorInsuranceName;
  }


  public RestfulContactV1 motorInsuranceNumber(java.lang.String motorInsuranceNumber) {
    
    this.motorInsuranceNumber = motorInsuranceNumber;
    return this;
  }

   /**
   * Get motorInsuranceNumber
   * @return motorInsuranceNumber
  **/
  @javax.annotation.Nullable
  public java.lang.String getMotorInsuranceNumber() {
    return motorInsuranceNumber;
  }


  public void setMotorInsuranceNumber(java.lang.String motorInsuranceNumber) {
    this.motorInsuranceNumber = motorInsuranceNumber;
  }


  public RestfulContactV1 name(java.lang.String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public java.lang.String getName() {
    return name;
  }


  public void setName(java.lang.String name) {
    this.name = name;
  }


  public RestfulContactV1 phone(java.lang.String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  public java.lang.String getPhone() {
    return phone;
  }


  public void setPhone(java.lang.String phone) {
    this.phone = phone;
  }


  public RestfulContactV1 salutation(java.lang.String salutation) {
    
    this.salutation = salutation;
    return this;
  }

   /**
   * Get salutation
   * @return salutation
  **/
  @javax.annotation.Nullable
  public java.lang.String getSalutation() {
    return salutation;
  }


  public void setSalutation(java.lang.String salutation) {
    this.salutation = salutation;
  }


  public RestfulContactV1 street(java.lang.String street) {
    
    this.street = street;
    return this;
  }

   /**
   * Get street
   * @return street
  **/
  @javax.annotation.Nullable
  public java.lang.String getStreet() {
    return street;
  }


  public void setStreet(java.lang.String street) {
    this.street = street;
  }


  public RestfulContactV1 title(java.lang.String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  public java.lang.String getTitle() {
    return title;
  }


  public void setTitle(java.lang.String title) {
    this.title = title;
  }


  public RestfulContactV1 trafficInsuranceName(java.lang.String trafficInsuranceName) {
    
    this.trafficInsuranceName = trafficInsuranceName;
    return this;
  }

   /**
   * Get trafficInsuranceName
   * @return trafficInsuranceName
  **/
  @javax.annotation.Nullable
  public java.lang.String getTrafficInsuranceName() {
    return trafficInsuranceName;
  }


  public void setTrafficInsuranceName(java.lang.String trafficInsuranceName) {
    this.trafficInsuranceName = trafficInsuranceName;
  }


  public RestfulContactV1 trafficInsuranceNumber(java.lang.String trafficInsuranceNumber) {
    
    this.trafficInsuranceNumber = trafficInsuranceNumber;
    return this;
  }

   /**
   * Get trafficInsuranceNumber
   * @return trafficInsuranceNumber
  **/
  @javax.annotation.Nullable
  public java.lang.String getTrafficInsuranceNumber() {
    return trafficInsuranceNumber;
  }


  public void setTrafficInsuranceNumber(java.lang.String trafficInsuranceNumber) {
    this.trafficInsuranceNumber = trafficInsuranceNumber;
  }


  public RestfulContactV1 trafficLegalProtection(Integer trafficLegalProtection) {
    
    this.trafficLegalProtection = trafficLegalProtection;
    return this;
  }

   /**
   * Get trafficLegalProtection
   * @return trafficLegalProtection
  **/
  @javax.annotation.Nullable
  public Integer getTrafficLegalProtection() {
    return trafficLegalProtection;
  }


  public void setTrafficLegalProtection(Integer trafficLegalProtection) {
    this.trafficLegalProtection = trafficLegalProtection;
  }


  public RestfulContactV1 website(java.lang.String website) {
    
    this.website = website;
    return this;
  }

   /**
   * Get website
   * @return website
  **/
  @javax.annotation.Nullable
  public java.lang.String getWebsite() {
    return website;
  }


  public void setWebsite(java.lang.String website) {
    this.website = website;
  }


  public RestfulContactV1 zipCode(java.lang.String zipCode) {
    
    this.zipCode = zipCode;
    return this;
  }

   /**
   * Get zipCode
   * @return zipCode
  **/
  @javax.annotation.Nullable
  public java.lang.String getZipCode() {
    return zipCode;
  }


  public void setZipCode(java.lang.String zipCode) {
    this.zipCode = zipCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestfulContactV1 restfulContactV1 = (RestfulContactV1) o;
    return Objects.equals(this.bankAccount, restfulContactV1.bankAccount) &&
        Objects.equals(this.bankCode, restfulContactV1.bankCode) &&
        Objects.equals(this.bankName, restfulContactV1.bankName) &&
        Objects.equals(this.beaSafeId, restfulContactV1.beaSafeId) &&
        Objects.equals(this.birthDate, restfulContactV1.birthDate) &&
        Objects.equals(this.city, restfulContactV1.city) &&
        Objects.equals(this.company, restfulContactV1.company) &&
        Objects.equals(this.complimentaryClose, restfulContactV1.complimentaryClose) &&
        Objects.equals(this.country, restfulContactV1.country) &&
        Objects.equals(this.creationDate, restfulContactV1.creationDate) &&
        Objects.equals(this.creator, restfulContactV1.creator) &&
        Objects.equals(this.custom1, restfulContactV1.custom1) &&
        Objects.equals(this.custom2, restfulContactV1.custom2) &&
        Objects.equals(this.custom3, restfulContactV1.custom3) &&
        Objects.equals(this.department, restfulContactV1.department) &&
        Objects.equals(this.email, restfulContactV1.email) &&
        Objects.equals(this.encryptionPwd, restfulContactV1.encryptionPwd) &&
        Objects.equals(this.fax, restfulContactV1.fax) &&
        Objects.equals(this.firstName, restfulContactV1.firstName) &&
        Objects.equals(this.id, restfulContactV1.id) &&
        Objects.equals(this.insuranceName, restfulContactV1.insuranceName) &&
        Objects.equals(this.insuranceNumber, restfulContactV1.insuranceNumber) &&
        Objects.equals(this.lastModifier, restfulContactV1.lastModifier) &&
        Objects.equals(this.legalProtection, restfulContactV1.legalProtection) &&
        Objects.equals(this.mobile, restfulContactV1.mobile) &&
        Objects.equals(this.modificationDate, restfulContactV1.modificationDate) &&
        Objects.equals(this.motorInsuranceName, restfulContactV1.motorInsuranceName) &&
        Objects.equals(this.motorInsuranceNumber, restfulContactV1.motorInsuranceNumber) &&
        Objects.equals(this.name, restfulContactV1.name) &&
        Objects.equals(this.phone, restfulContactV1.phone) &&
        Objects.equals(this.salutation, restfulContactV1.salutation) &&
        Objects.equals(this.street, restfulContactV1.street) &&
        Objects.equals(this.title, restfulContactV1.title) &&
        Objects.equals(this.trafficInsuranceName, restfulContactV1.trafficInsuranceName) &&
        Objects.equals(this.trafficInsuranceNumber, restfulContactV1.trafficInsuranceNumber) &&
        Objects.equals(this.trafficLegalProtection, restfulContactV1.trafficLegalProtection) &&
        Objects.equals(this.website, restfulContactV1.website) &&
        Objects.equals(this.zipCode, restfulContactV1.zipCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankAccount, bankCode, bankName, beaSafeId, birthDate, city, company, complimentaryClose, country, creationDate, creator, custom1, custom2, custom3, department, email, encryptionPwd, fax, firstName, id, insuranceName, insuranceNumber, lastModifier, legalProtection, mobile, modificationDate, motorInsuranceName, motorInsuranceNumber, name, phone, salutation, street, title, trafficInsuranceName, trafficInsuranceNumber, trafficLegalProtection, website, zipCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestfulContactV1 {\n");
    sb.append("    bankAccount: ").append(toIndentedString(bankAccount)).append("\n");
    sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    beaSafeId: ").append(toIndentedString(beaSafeId)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    complimentaryClose: ").append(toIndentedString(complimentaryClose)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    custom1: ").append(toIndentedString(custom1)).append("\n");
    sb.append("    custom2: ").append(toIndentedString(custom2)).append("\n");
    sb.append("    custom3: ").append(toIndentedString(custom3)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    encryptionPwd: ").append(toIndentedString(encryptionPwd)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    insuranceName: ").append(toIndentedString(insuranceName)).append("\n");
    sb.append("    insuranceNumber: ").append(toIndentedString(insuranceNumber)).append("\n");
    sb.append("    lastModifier: ").append(toIndentedString(lastModifier)).append("\n");
    sb.append("    legalProtection: ").append(toIndentedString(legalProtection)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("    motorInsuranceName: ").append(toIndentedString(motorInsuranceName)).append("\n");
    sb.append("    motorInsuranceNumber: ").append(toIndentedString(motorInsuranceNumber)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    salutation: ").append(toIndentedString(salutation)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    trafficInsuranceName: ").append(toIndentedString(trafficInsuranceName)).append("\n");
    sb.append("    trafficInsuranceNumber: ").append(toIndentedString(trafficInsuranceNumber)).append("\n");
    sb.append("    trafficLegalProtection: ").append(toIndentedString(trafficLegalProtection)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bankAccount");
    openapiFields.add("bankCode");
    openapiFields.add("bankName");
    openapiFields.add("beaSafeId");
    openapiFields.add("birthDate");
    openapiFields.add("city");
    openapiFields.add("company");
    openapiFields.add("complimentaryClose");
    openapiFields.add("country");
    openapiFields.add("creationDate");
    openapiFields.add("creator");
    openapiFields.add("custom1");
    openapiFields.add("custom2");
    openapiFields.add("custom3");
    openapiFields.add("department");
    openapiFields.add("email");
    openapiFields.add("encryptionPwd");
    openapiFields.add("fax");
    openapiFields.add("firstName");
    openapiFields.add("id");
    openapiFields.add("insuranceName");
    openapiFields.add("insuranceNumber");
    openapiFields.add("lastModifier");
    openapiFields.add("legalProtection");
    openapiFields.add("mobile");
    openapiFields.add("modificationDate");
    openapiFields.add("motorInsuranceName");
    openapiFields.add("motorInsuranceNumber");
    openapiFields.add("name");
    openapiFields.add("phone");
    openapiFields.add("salutation");
    openapiFields.add("street");
    openapiFields.add("title");
    openapiFields.add("trafficInsuranceName");
    openapiFields.add("trafficInsuranceNumber");
    openapiFields.add("trafficLegalProtection");
    openapiFields.add("website");
    openapiFields.add("zipCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to RestfulContactV1
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RestfulContactV1.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RestfulContactV1 is not found in the empty JSON string", RestfulContactV1.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RestfulContactV1.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RestfulContactV1` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bankAccount") != null && !jsonObj.get("bankAccount").isJsonNull()) && !jsonObj.get("bankAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bankAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bankAccount").toString()));
      }
      if ((jsonObj.get("bankCode") != null && !jsonObj.get("bankCode").isJsonNull()) && !jsonObj.get("bankCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bankCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bankCode").toString()));
      }
      if ((jsonObj.get("bankName") != null && !jsonObj.get("bankName").isJsonNull()) && !jsonObj.get("bankName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bankName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bankName").toString()));
      }
      if ((jsonObj.get("beaSafeId") != null && !jsonObj.get("beaSafeId").isJsonNull()) && !jsonObj.get("beaSafeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beaSafeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beaSafeId").toString()));
      }
      if ((jsonObj.get("birthDate") != null && !jsonObj.get("birthDate").isJsonNull()) && !jsonObj.get("birthDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `birthDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("birthDate").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("company") != null && !jsonObj.get("company").isJsonNull()) && !jsonObj.get("company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company").toString()));
      }
      if ((jsonObj.get("complimentaryClose") != null && !jsonObj.get("complimentaryClose").isJsonNull()) && !jsonObj.get("complimentaryClose").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `complimentaryClose` to be a primitive type in the JSON string but got `%s`", jsonObj.get("complimentaryClose").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("creator") != null && !jsonObj.get("creator").isJsonNull()) && !jsonObj.get("creator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creator").toString()));
      }
      if ((jsonObj.get("custom1") != null && !jsonObj.get("custom1").isJsonNull()) && !jsonObj.get("custom1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom1").toString()));
      }
      if ((jsonObj.get("custom2") != null && !jsonObj.get("custom2").isJsonNull()) && !jsonObj.get("custom2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom2").toString()));
      }
      if ((jsonObj.get("custom3") != null && !jsonObj.get("custom3").isJsonNull()) && !jsonObj.get("custom3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom3").toString()));
      }
      if ((jsonObj.get("department") != null && !jsonObj.get("department").isJsonNull()) && !jsonObj.get("department").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `department` to be a primitive type in the JSON string but got `%s`", jsonObj.get("department").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("encryptionPwd") != null && !jsonObj.get("encryptionPwd").isJsonNull()) && !jsonObj.get("encryptionPwd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `encryptionPwd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("encryptionPwd").toString()));
      }
      if ((jsonObj.get("fax") != null && !jsonObj.get("fax").isJsonNull()) && !jsonObj.get("fax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fax").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("insuranceName") != null && !jsonObj.get("insuranceName").isJsonNull()) && !jsonObj.get("insuranceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `insuranceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("insuranceName").toString()));
      }
      if ((jsonObj.get("insuranceNumber") != null && !jsonObj.get("insuranceNumber").isJsonNull()) && !jsonObj.get("insuranceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `insuranceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("insuranceNumber").toString()));
      }
      if ((jsonObj.get("lastModifier") != null && !jsonObj.get("lastModifier").isJsonNull()) && !jsonObj.get("lastModifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifier").toString()));
      }
      if ((jsonObj.get("mobile") != null && !jsonObj.get("mobile").isJsonNull()) && !jsonObj.get("mobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobile").toString()));
      }
      if ((jsonObj.get("motorInsuranceName") != null && !jsonObj.get("motorInsuranceName").isJsonNull()) && !jsonObj.get("motorInsuranceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `motorInsuranceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("motorInsuranceName").toString()));
      }
      if ((jsonObj.get("motorInsuranceNumber") != null && !jsonObj.get("motorInsuranceNumber").isJsonNull()) && !jsonObj.get("motorInsuranceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `motorInsuranceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("motorInsuranceNumber").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("salutation") != null && !jsonObj.get("salutation").isJsonNull()) && !jsonObj.get("salutation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salutation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salutation").toString()));
      }
      if ((jsonObj.get("street") != null && !jsonObj.get("street").isJsonNull()) && !jsonObj.get("street").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `street` to be a primitive type in the JSON string but got `%s`", jsonObj.get("street").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("trafficInsuranceName") != null && !jsonObj.get("trafficInsuranceName").isJsonNull()) && !jsonObj.get("trafficInsuranceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trafficInsuranceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trafficInsuranceName").toString()));
      }
      if ((jsonObj.get("trafficInsuranceNumber") != null && !jsonObj.get("trafficInsuranceNumber").isJsonNull()) && !jsonObj.get("trafficInsuranceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trafficInsuranceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trafficInsuranceNumber").toString()));
      }
      if ((jsonObj.get("website") != null && !jsonObj.get("website").isJsonNull()) && !jsonObj.get("website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website").toString()));
      }
      if ((jsonObj.get("zipCode") != null && !jsonObj.get("zipCode").isJsonNull()) && !jsonObj.get("zipCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zipCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zipCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RestfulContactV1.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RestfulContactV1' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RestfulContactV1> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RestfulContactV1.class));

       return (TypeAdapter<T>) new TypeAdapter<RestfulContactV1>() {
           @Override
           public void write(JsonWriter out, RestfulContactV1 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RestfulContactV1 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RestfulContactV1 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RestfulContactV1
  * @throws IOException if the JSON string is invalid with respect to RestfulContactV1
  */
  public static RestfulContactV1 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RestfulContactV1.class);
  }

 /**
  * Convert an instance of RestfulContactV1 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

