name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Build with Maven
      run: mvn clean package

    - name: Find WAR File
      id: find_war
      run: echo "::set-output name=filename::$(find ./target -name '*.war' -printf '%f')"
      
    - name: Compress Source Code as ZIP
      run: zip -r latest.zip .
      
    - name: Create Temporary Directory
      run: mkdir temp_directory

    - name: Copy Source Code to Temporary Directory
      run: find . -mindepth 1 -maxdepth 1 ! -name "temp_directory" -exec cp -r {} temp_directory/ \;

    - name: Compress Source Code as TAR GZ
      run: tar -czf source-code.tar.gz -C temp_directory/ .

    - name: Get Release ID
      id: get_release_id
      run: |
        release_info=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases")
        release_id=$(echo "$release_info" | jq -r '.[0].id')
        echo "Release ID: $release_id"
        echo "::set-output name=release_id::$release_id"

    - name: Upload Release Asset
      run: |
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @./target/${{ steps.find_war.outputs.filename }} \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.get_release_id.outputs.release_id }}/assets?name=${{ steps.find_war.outputs.filename }}"
          
    - name: Upload Source Code ZIP
      run: |
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/zip" \
          --data-binary @./latest.zip \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.get_release_id.outputs.release_id }}/assets?latest.zip"

    - name: Upload Source Code TAR GZ
      run: |
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/x-tar" \
          --data-binary @./source-code.tar.gz \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.get_release_id.outputs.release_id }}/assets?name=source-code.tar.gz"
